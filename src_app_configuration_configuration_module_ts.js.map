{"version":3,"sources":["./src/app/configuration/configuration-routing.module.ts","./src/app/configuration/configuration.module.ts","./src/app/configuration/configuration.page.ts","./src/app/configuration/configuration.page.scss","./src/app/configuration/configuration.page.html"],"names":[],"mappings":"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","file":"src_app_configuration_configuration_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ConfigurationPage } from './configuration.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ConfigurationPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ConfigurationPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ConfigurationPageRoutingModule } from './configuration-routing.module';\r\n\r\nimport { ConfigurationPage } from './configuration.page';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgxSoapModule } from 'ngx-soap';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    HttpClientModule,\r\n    NgxSoapModule,\r\n    ConfigurationPageRoutingModule\r\n  ],\r\n  declarations: [ConfigurationPage]\r\n})\r\nexport class ConfigurationPageModule { }\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { NgxSoapService, ISoapMethod, Client, ISoapMethodResponse, security } from 'ngx-soap';\r\nimport { ThisReceiver } from '@angular/compiler';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst callcontent = `<poolAlias xsi:type=\"xsd:string\">PRODDEMO</poolAlias>\r\n       <poolId xsi:type=\"xsd:string\">?</poolId>\r\n       <requestConfig xsi:type=\"xsd:string\">?</requestConfig>`;\r\nconst value = `\r\n            <![CDATA[<PARAM>\r\n            <FLD NAME=\"XIPADD\" TYPE=\"Char\">125.18.84.155</FLD>\r\n           <FLD NAME=\"XPODPORT\" TYPE=\"Integer\">8124</FLD>\r\n           <FLD NAME=\"XPODPOOL\" TYPE=\"Char\">PRODDEMO</FLD>\r\n           <FLD NAME=\"XADSUSR\" TYPE=\"Char\">TESTUSER</FLD>\r\n           <FLD NAME=\"XADSPWD\" TYPE=\"Char\">TU@123*</FLD>\r\n            </PARAM>]]>\r\n`\r\n@Component({\r\n  selector: 'app-configuration',\r\n  templateUrl: './configuration.page.html',\r\n  styleUrls: ['./configuration.page.scss'],\r\n})\r\nexport class ConfigurationPage implements OnInit {\r\n  json = {\r\n    RESULT: {\r\n      GRP: [\r\n        {\r\n          ID: \"GRP1\",\r\n          I_XSDHNUM: \"SWBDE0120070\",\r\n          I_XPODREF: \"POD-SWBDE0120070\",\r\n          I_XLOCLAT: 48.56,\r\n          I_XLOCLOG: 47.66,\r\n          I_XNOTE: \"Testing Notes\",\r\n          I_XSIGNAME: \"Bharath\",\r\n          I_XSIG: \"Blob\",\r\n          I_XMACADD: \"4A:21:56:97\",\r\n          I_XDEVICEID: \"4A:21:56:97\"\r\n        },\r\n        {\r\n          ID: \"GRP4\",\r\n          O_XFLG: 2,\r\n          O_XMSG: \"Delivered!!!\",\r\n        },\r\n      ],\r\n      TAB: [{\r\n        DIM: 99,\r\n        ID: \"GRP2\",\r\n        SIZE: \"2\",\r\n        LIN: [\r\n          {\r\n            NUM: 1,\r\n            I_XSDDLIN: 1000,\r\n            I_XITMREF: \"BMS001\",\r\n            I_XDLVQTY: 1,\r\n            I_XPODQTY: 1\r\n          },\r\n          {\r\n            NUM: 2,\r\n            I_XSDDLIN: 2000,\r\n            I_XITMREF: \"BMS002\",\r\n            I_XDLVQTY: 1,\r\n            I_XPODQTY: 1\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        DIM: 6,\r\n        ID: \"GRP3\",\r\n        SIZE: \"1\",\r\n        LIN: [\r\n          {\r\n            NUM: 1,\r\n            I_XIMG: \"Blob\",\r\n          },\r\n          {\r\n            NUM: 2,\r\n            I_XIMG: \"64 Bit\",\r\n          }\r\n        ]\r\n      }\r\n      ],\r\n    }\r\n  };\r\n\r\n  param = {\r\n    param: [\r\n      {\r\n        XIPADD: \"125.18.84.155\",\r\n        XPODPORT: 8124,\r\n        XPODPOOL: \"PRODDEMO\",\r\n        XADSUSR: \"TESTUSER\",\r\n        XADSPWD: \"\"\r\n      }\r\n    ]\r\n  }\r\n\r\n  dataType = {\r\n    I_XSDHNUM: \"Char\",\r\n    I_XPODREF: \"Char\",\r\n    I_XLOCLAT: \"Char\",\r\n    I_XLOCLOG: \"Char\",\r\n    I_XNOTE: \"Char\",\r\n    I_XSIGNAME: \"Char\",\r\n    I_XSIG: \"Blob\",\r\n    I_XMACADD: \"Char\",\r\n    I_XDEVICEID: \"Char\",\r\n\r\n    O_XFLG: \"Integer\",\r\n    O_XMSG: \"Char\",\r\n\r\n    I_XSDDLIN: \"Integer\",\r\n    I_XITMREF: \"Char\",\r\n\r\n    I_XDLVQTY: \"Decimal\",\r\n    I_XPODQTY: \"Decimal\",\r\n\r\n    I_XIMG: \"Blob\"\r\n  }\r\n\r\n  submitted = false;\r\n\r\n  configurationModel: any = {};\r\n\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    private httpClient: HttpClient,\r\n    private soap: NgxSoapService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.callSoapRequest();\r\n  }\r\n\r\n  jsonToXml() {\r\n\r\n    for (let result in this.json) {\r\n      const GROUP = this.json.RESULT.GRP;\r\n      const TAB = this.json.RESULT.TAB;\r\n      let RESULTTAG = \"<\" + result + \">\";\r\n      if (GROUP.length > 0) {\r\n        let GRPTag = '';\r\n        for (let i = 0; i < GROUP.length; i++) {\r\n          let grp = GROUP[i];\r\n          GRPTag += \"\\n\\t<GRP ID=\\\"\" + grp.ID + \"\\\"\";\r\n          let FLDTag = '';\r\n          for (let gData in grp) {\r\n            if (gData !== 'ID') {\r\n              FLDTag += \"\\n\\t\\t<FLD \";\r\n              FLDTag += \"NAME=\\\"\" + gData + \"\\\"\" + \" TYPE=\\\"\" + this.dataType[gData] + \"\\\">\" + grp[gData] + \"</FLD>\";\r\n            }\r\n          }\r\n          GRPTag += \">\" + FLDTag + \"\\n\\t\" + \"</GRP>\";\r\n        }\r\n        RESULTTAG += GRPTag;\r\n      }\r\n      if (TAB.length > 0) {\r\n        let TABTag = '';\r\n        for (let tabLin in TAB) {\r\n          let LIN = TAB[tabLin].LIN;\r\n          TABTag += \"\\n\\t<TAB DIM=\\\"\" + TAB[tabLin].DIM + \"\\\"\" + \" ID=\\\"\" + TAB[tabLin].ID + \"\\\"\" + \" SIZE=\\\"\" + TAB[tabLin].SIZE + \"\\\"\";\r\n          if (LIN.length > 0) {\r\n            let LINTag = '';\r\n            for (let j = 0; j < LIN.length; j++) {\r\n              let tab = LIN[j];\r\n              LINTag += \"\\n\\t\\t<LIN NUM=\\\"\" + tab.NUM + \"\\\"\";\r\n              let FLDTag = '';\r\n              for (let tData in tab) {\r\n                if (tData !== 'NUM') {\r\n                  FLDTag += \"\\n\\t\\t\\t<FLD \";\r\n                  FLDTag += \"NAME=\\\"\" + tData + \"\\\"\" + \" TYPE=\\\"\" + this.dataType[tData] + \"\\\">\" + tab[tData] + \"</FLD>\";\r\n                }\r\n              }\r\n              LINTag += \">\" + FLDTag + \"\\n\\t\\t\" + \"</LIN>\";\r\n            }\r\n            TABTag += \">\" + LINTag + \"\\n\\t</TAB>\";\r\n          }\r\n        }\r\n        return RESULTTAG + TABTag + \"\\n</\" + result + \">\";\r\n      }\r\n    }\r\n  }\r\n\r\n  callSoapRequest() {\r\n    this.soap.createClient('assets/delivery.wsdl', {\r\n      attributesKey: 'attributes', valueKey: '$value', xmlKey: '$xml'\r\n    })\r\n      .then(client => {\r\n        client.setSecurity(new security.BasicAuthSecurity(environment.soapUsername, environment.soapPassword, ''))\r\n\r\n        client.call('run', {\r\n          callContext: {\r\n            $xml: callcontent,\r\n            attributes: {\r\n              'xsi:type': 'wss:CAdxCallContext'\r\n            },\r\n          },\r\n          publicName: {\r\n            attributes: {\r\n              'xsi:type': \"xsd:string\"\r\n            },\r\n            $value: 'X10ACONFIG'\r\n          },\r\n          inputXml: {\r\n            attributes: {\r\n              'xsi:type': \"xsd:string\"\r\n            },\r\n            $xml: value\r\n          }\r\n        }).subscribe(res => {\r\n          // client.call('run', body).subscribe(res => {\r\n          // }).subscribe(res => {\r\n        }, err => console.log(err));\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  onSubmit(form) {\r\n    this.submitted = true;\r\n    if (form.valid) {\r\n      this.navCtrl.back();\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb25maWd1cmF0aW9uLnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"medium\\\">\\r\\n    <ion-buttons slot=\\\"start\\\" class=\\\"back-btn\\\">\\r\\n      <ion-back-button color=\\\"light\\\" text=\\\"\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Configuration</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding-vertical\\\">\\r\\n  <div class=\\\"form-section mb-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12 col-md-6 col-lg-4 offset-md-3 offset-lg-4\\\">\\r\\n        <ion-grid class=\\\"ion-no-padding\\\">\\r\\n          <form #configurationForm=\\\"ngForm\\\" novalidate class=\\\"px-4\\\" (ngSubmit)=\\\"onSubmit(configurationForm)\\\">\\r\\n            <ion-item class=\\\"ion-no-padding\\\">\\r\\n              <ion-label position=\\\"stacked\\\">X3 POD IP</ion-label>\\r\\n              <ion-input name=\\\"podip\\\" placeholder=\\\"Enter X3 POD IP\\\" type=\\\"text\\\" [(ngModel)]=\\\"configurationModel.pod_ip\\\" #pod_ip=\\\"ngModel\\\" required>\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n            <ion-text *ngIf=\\\"submitted && pod_ip.invalid\\\">\\r\\n              <p class=\\\"error-msg\\\" *ngIf=\\\"pod_ip.invalid && pod_ip.errors.required\\\">\\r\\n                X3 POD IP is required\\r\\n              </p>\\r\\n            </ion-text>\\r\\n            <ion-item class=\\\"ion-no-padding\\\">\\r\\n              <ion-label position=\\\"stacked\\\">X3 Port</ion-label>\\r\\n              <ion-input name=\\\"port\\\" placeholder=\\\"Enter X3 Port\\\" type=\\\"text\\\" [(ngModel)]=\\\"configurationModel.port\\\" #port=\\\"ngModel\\\" required>\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n            <ion-text *ngIf=\\\"submitted && port.invalid\\\">\\r\\n              <p class=\\\"error-msg\\\" *ngIf=\\\"port.invalid && port.errors.required\\\">\\r\\n                X3 Port is required\\r\\n              </p>\\r\\n            </ion-text>\\r\\n            <ion-item class=\\\"ion-no-padding\\\">\\r\\n              <ion-label position=\\\"stacked\\\">Pool Alias</ion-label>\\r\\n              <ion-input name=\\\"pool_alias\\\" placeholder=\\\"Enter Pool Alias\\\" type=\\\"text\\\" [(ngModel)]=\\\"configurationModel.pool_alias\\\" #pool_alias=\\\"ngModel\\\"\\r\\n                required>\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n            <ion-text *ngIf=\\\"submitted && pool_alias.invalid\\\">\\r\\n              <p class=\\\"error-msg\\\" *ngIf=\\\"pool_alias.invalid && pool_alias.errors.required\\\">\\r\\n                Pool Alias is required\\r\\n              </p>\\r\\n            </ion-text>\\r\\n            <ion-item class=\\\"ion-no-padding\\\">\\r\\n              <ion-label position=\\\"stacked\\\">Folder Username</ion-label>\\r\\n              <ion-input name=\\\"folder_username\\\" placeholder=\\\"Enter Folder Username\\\" type=\\\"text\\\" [(ngModel)]=\\\"configurationModel.folder_username\\\"\\r\\n                #folder_username=\\\"ngModel\\\" required>\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n            <ion-text *ngIf=\\\"submitted && folder_username.invalid\\\">\\r\\n              <p class=\\\"error-msg\\\" *ngIf=\\\"folder_username.invalid && folder_username.errors.required\\\">\\r\\n                Folder Username is required\\r\\n              </p>\\r\\n            </ion-text>\\r\\n            <ion-item class=\\\"ion-no-padding\\\">\\r\\n              <ion-label position=\\\"stacked\\\">Folder Password</ion-label>\\r\\n              <ion-input name=\\\"folder_password\\\" placeholder=\\\"Enter Folder Password\\\" type=\\\"password\\\" [(ngModel)]=\\\"configurationModel.folder_password\\\"\\r\\n                #folder_password=\\\"ngModel\\\" required>\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n            <ion-text *ngIf=\\\"submitted && folder_password.invalid\\\">\\r\\n              <p class=\\\"error-msg\\\" *ngIf=\\\"folder_password.invalid && folder_password.errors.required\\\">\\r\\n                Folder Password is required\\r\\n              </p>\\r\\n            </ion-text>\\r\\n            <ion-row>\\r\\n              <ion-col size=\\\"6\\\" class=\\\"pr-1\\\">\\r\\n                <ion-button color=\\\"danger\\\" shape=\\\"round\\\" expand=\\\"block\\\" class=\\\"ion-margin-vertical\\\"\\r\\n                  type=\\\"reset\\\">\\r\\n                  Reset\\r\\n                </ion-button>\\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"6\\\" class=\\\"pl-1\\\">\\r\\n                <ion-button shape=\\\"round\\\" expand=\\\"block\\\" class=\\\"ion-margin-vertical\\\" type=\\\"submit\\\">\\r\\n                  Submit\\r\\n                </ion-button>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n          </form>\\r\\n        </ion-grid>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\";"],"sourceRoot":"webpack:///"}