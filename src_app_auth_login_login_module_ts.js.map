{"version":3,"sources":["./src/app/auth/login/login-routing.module.ts","./src/app/auth/login/login.module.ts","./src/app/auth/login/login.page.ts","./src/app/auth/login/login.page.scss","./src/app/auth/login/login.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACF;AAEA;AAEmB;AAEvB;AACM;IAalC,eAAe,SAAf,eAAe;CAAI;AAAnB,eAAe;IAV3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,yDAAY;YACZ,uDAAW;YACX,yEAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;ACtBsB;AACT;AACmB;IAO/C,SAAS,SAAT,SAAS;IAMpB,YACU,MAAc,EACd,WAAwB;QADxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAPlC,cAAS,GAAY,KAAK,CAAC;QAC3B,iBAAY,GAAY,KAAK,CAAC;QAC9B,UAAK,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QACvC,cAAS,GAAG,KAAK,CAAC;IAKd,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,OAAO,CAAC,IAAI;QACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACpC;IACH,CAAC;CACF;;YA5BQ,mDAAM;YACN,sEAAW;;AAOP,SAAS;IALrB,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,0EAAgC;;KAEjC,CAAC;GACW,SAAS,CAoBrB;AApBqB;;;;;;;;;;;;;;;;ACTtB,iEAAe,cAAc,mCAAmC,GAAG,6CAA6C,2QAA2Q,E;;;;;;;;;;;;;;;ACA3X,iEAAe,sgFAAsgF,E","file":"src_app_auth_login_login_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n  isLoading: boolean = false;\r\n  isLoadingApi: boolean = false;\r\n  login = { driverId: '', password: '' };\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onLogin(form) {\r\n    this.submitted = true;\r\n    if (form.valid) {\r\n      this.authService.login(this.login);\r\n    }\r\n  }\r\n}\r\n","export default \"ion-toolbar {\\n  --border-width: 0px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDhCQUFBO0FBQ0oiLCJmaWxlIjoibG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXRvb2xiYXIge1xyXG4gICAgLS1ib3JkZXItd2lkdGg6IDBweCAhaW1wb3J0YW50O1xyXG59Il19 */\";","export default \"<!-- <ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button fill=\\\"clear\\\" [routerLink]=\\\"['/configuration']\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"settings-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header> -->\\r\\n<ion-content>\\r\\n  <div class=\\\"form-section my-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12 col-md-6 col-lg-4 offset-md-3 offset-lg-4\\\">\\r\\n        <div class=\\\"auth-logo app-heading-logo text-center\\\">\\r\\n          <img src=\\\"assets/images/logo.jpg\\\" alt=\\\"pod\\\">\\r\\n        </div>\\r\\n        <ion-grid class=\\\"ion-no-padding my-5\\\">\\r\\n          <form #loginForm=\\\"ngForm\\\" novalidate class=\\\"px-4\\\" (ngSubmit)=\\\"onLogin(loginForm)\\\">\\r\\n            <ion-item class=\\\"ion-no-padding ion-margin-top\\\">\\r\\n              <ion-label position=\\\"stacked\\\">Driver Id</ion-label>\\r\\n              <ion-input [(ngModel)]=\\\"login.driverId\\\" placeholder=\\\"Enter Driver Id\\\" name=\\\"username\\\" type=\\\"text\\\"\\r\\n                #username=\\\"ngModel\\\" required>\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n            <ion-text *ngIf=\\\"submitted && username.invalid\\\">\\r\\n              <p class=\\\"error-msg\\\" *ngIf=\\\"username.invalid && username.errors.required\\\">\\r\\n                Driver id is required.\\r\\n              </p>\\r\\n            </ion-text>\\r\\n            <ion-item class=\\\"ion-no-padding\\\">\\r\\n              <ion-label position=\\\"stacked\\\">Password</ion-label>\\r\\n              <ion-input [(ngModel)]=\\\"login.password\\\" placeholder=\\\"Enter Password\\\" name=\\\"password\\\" type=\\\"password\\\"\\r\\n                #password=\\\"ngModel\\\" required>\\r\\n                <!-- minlength=\\\"4\\\" -->\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n            <ion-text *ngIf=\\\"submitted && password.invalid\\\">\\r\\n              <p class=\\\"error-msg\\\" *ngIf=\\\"password.invalid && password.errors.required\\\">\\r\\n                Password is required\\r\\n              </p>\\r\\n            </ion-text>\\r\\n            <!-- <ion-text *ngIf=\\\"submitted && password.touched ||password.invalid\\\">\\r\\n              <p class=\\\"error-msg\\\" *ngIf=\\\"password.invalid && password.errors?.minlength\\\">\\r\\n                Please enter 4 character long password\\r\\n              </p>\\r\\n            </ion-text> -->\\r\\n            <ion-button shape=\\\"round\\\" expand=\\\"block\\\" class=\\\"my-4\\\" type=\\\"submit\\\">Login\\r\\n            </ion-button>\\r\\n          </form>\\r\\n        </ion-grid>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\";"],"sourceRoot":"webpack:///"}