{"version":3,"sources":["./src/app/tabpage/stop-list/stop-detail/pod/pod-routing.module.ts","./src/app/tabpage/stop-list/stop-detail/pod/pod.module.ts","./src/app/tabpage/stop-list/stop-detail/pod/pod.page.ts","./src/app/tabpage/stop-list/stop-detail/pod/pod.page.scss","./src/app/tabpage/stop-list/stop-detail/pod/pod.page.html"],"names":[],"mappings":"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","file":"src_app_tabpage_stop-list_stop-detail_pod_pod_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PodPage } from './pod.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PodPage\r\n  },\r\n  {\r\n    path: 'capture-details',\r\n    loadChildren: () => import('./capture-details/capture-details.module').then( m => m.CaptureDetailsPageModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PodPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PodPageRoutingModule } from './pod-routing.module';\r\n\r\nimport { PodPage } from './pod.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    PodPageRoutingModule\r\n  ],\r\n  declarations: [PodPage]\r\n})\r\nexport class PodPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport { RoutesService } from 'src/app/services/routes.service';\r\nimport { UtilService } from 'src/app/services/util.service';\r\nimport * as _ from 'lodash';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-pod',\r\n  templateUrl: './pod.page.html',\r\n  styleUrls: ['./pod.page.scss'],\r\n})\r\n\r\nexport class PodPage implements OnInit {\r\n  podId: string;\r\n  pod = [];\r\n  podModel = {\r\n    confirm_arrival: '',\r\n    start_unload: '',\r\n    delivery: '',\r\n    end_unload: '',\r\n    departure: ''\r\n  };\r\n  deliverDateTime: any;\r\n  currentStop;\r\n  postParams;\r\n\r\n  constructor(\r\n    private routesService: RoutesService,\r\n    private route: ActivatedRoute,\r\n    private utilService: UtilService,\r\n    private router: Router\r\n  ) {\r\n    this.route.queryParams.subscribe(params => {\r\n      if (params && params.poddet) {\r\n        this.podId = params.poddet;\r\n        this.getPod();\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async getPod() {\r\n    let routeId = localStorage.getItem('activeRouteId');\r\n    await this.utilService.showLoading();\r\n    forkJoin({\r\n      pod: this.routesService.getPod(this.podId),\r\n      currentStop: this.routesService.getStops(routeId)\r\n    }).subscribe(resp => {\r\n      this.utilService.dismissLoading();\r\n      this.pod = resp.pod;\r\n      this.currentStop = _.find(resp.currentStop, { XDOCNUM_0: this.podId });\r\n\r\n      if (this.currentStop?.XARRTIM_0?.length > 1) {\r\n        let arrDate: any = moment(this.currentStop.XARRVDAT_0).format('YYYY-MM-DD');\r\n        let arrDateTime: any = new Date(arrDate + ' ' + this.currentStop.XARRTIM_0);\r\n        this.podModel.confirm_arrival = arrDateTime;\r\n      }\r\n\r\n      if (this.currentStop?.XSTARTULTIM_0.length > 1) {\r\n        let startUnDate: any = moment(this.currentStop.XSTARTULDAT_0).format('YYYY-MM-DD');\r\n        let startUnDateTime: any = new Date(startUnDate + ' ' + this.currentStop.XSTARTULTIM_0);\r\n        this.podModel.start_unload = startUnDateTime;\r\n      }\r\n\r\n      if (this.currentStop?.XSTATUS_0 == 6) {\r\n        let deliveredDate: any = moment(this.currentStop.XFINDAT_0).format('YYYY-MM-DD');\r\n        let deliveredDateTime: any = new Date(deliveredDate + ' ' + this.currentStop.XFINTIME_0);\r\n        this.podModel.delivery = 'Delivered';\r\n        this.deliverDateTime = deliveredDateTime;\r\n      }\r\n\r\n      if (this.currentStop?.XENDULTIM_0.length > 1) {\r\n        let endUnDate: any = moment(this.currentStop.XENDULDAT_0).format('YYYY-MM-DD');\r\n        let endUnDateTime: any = new Date(endUnDate + ' ' + this.currentStop.XENDULTIM_0);\r\n        this.podModel.end_unload = endUnDateTime;\r\n      }\r\n\r\n      if (this.currentStop?.XDEPTIM_0.length > 1) {\r\n        let departureDate: any = moment(this.currentStop.XDEPDAT_0).format('YYYY-MM-DD');\r\n        let departureDateTime: any = new Date(departureDate + ' ' + this.currentStop.XDEPTIM_0);\r\n        this.podModel.departure = departureDateTime;\r\n      }\r\n    }, (err: any) => {\r\n      this.utilService.dismissLoading();\r\n      this.utilService.showErrorCall(err);\r\n    })\r\n  }\r\n\r\n  setDate(type) {\r\n    switch (type) {\r\n      case 'confirm_arrival':\r\n        this.updatePODStatus(type);\r\n        break;\r\n      case 'start_unload':\r\n        if (this.podModel.confirm_arrival) {\r\n          this.updatePODStatus(type);\r\n        } else {\r\n          this.utilService.showToast('Please complete above step first.');\r\n        }\r\n        break;\r\n      case 'end_unload':\r\n        if (this.podModel.delivery && this.podModel.confirm_arrival && this.podModel.start_unload) {\r\n          this.updatePODStatus(type);\r\n        } else {\r\n          this.utilService.showToast('Please complete above step first.');\r\n        }\r\n        break;\r\n      case 'departure':\r\n        if (this.podModel.delivery && this.podModel.confirm_arrival && this.podModel.start_unload && this.podModel.end_unload) {\r\n          this.updatePODStatus(type);\r\n        } else {\r\n          this.utilService.showToast('Please complete above step first.');\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  updatePODStatus(type) {\r\n    if (!this.podModel[type]) {\r\n      this.utilService.showConfirmationPopup('Confirmation', 'Are you sure you want to ' + type.replace('_', ' ') + '?', async cb => {\r\n        if (cb == 1) {\r\n          this.postParams = {\r\n            doc: this.podId,\r\n            status_type: type,\r\n            datetime: moment().format('YYYY-MM-DDTHH:mm:ss')\r\n          }\r\n          if (type == 'confirm_arrival') {\r\n            if (UtilService.currentPos.lat && UtilService.currentPos.lng) {\r\n              this.postParams.latitude = UtilService.currentPos.lat;\r\n              this.postParams.longitude = UtilService.currentPos.lng;\r\n            } else {\r\n              this.utilService.showToast();\r\n              return false;\r\n            }\r\n          }\r\n          if (type == 'confirm_arrival' || type == 'departure') {\r\n            this.postParams.route_no = localStorage.getItem('activeRouteId');\r\n          }\r\n          await this.utilService.showLoading();\r\n          this.routesService.postStatus(this.postParams).subscribe((resp: any) => {\r\n            this.utilService.dismissLoading();\r\n            this.podModel[type] = new Date();\r\n            if (type == 'departure') {\r\n              this.router.navigate(['/tabs/stop-list']);\r\n            }\r\n          }, (err: any) => {\r\n            this.utilService.dismissLoading();\r\n            this.utilService.showErrorCall(err);\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.utilService.showToast('Already Completed!');\r\n    }\r\n  }\r\n\r\n  delivery() {\r\n    // if (this.podModel.start_unload) {\r\n    if (this.currentStop.XSTATUS_0 == 6) {\r\n      this.utilService.showToast('Product already delivered!')\r\n    } else {\r\n      const podId = this.podId\r\n      this.router.navigate(['/tabs/stop-list/stop-detail/pod/capture-details'], { queryParams: { podId } })\r\n    }\r\n    // }\r\n    // else {\r\n    //   this.utilService.showToast('Please complete above step first.');\r\n    // }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb2QucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"dark\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>POD</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content color=\\\"tertiary\\\" *ngFor=\\\"let item of pod\\\">\\r\\n  <ion-card class=\\\"m-3\\\">\\r\\n    <ion-card-content class=\\\"p-2\\\">\\r\\n      <table class=\\\"table table-sm table-borderless mb-0 fs-14\\\">\\r\\n        <tr>\\r\\n          <th>\\r\\n            <ion-label color=\\\"primary\\\">Customer</ion-label>\\r\\n          </th>\\r\\n          <td><b>{{ item.XBPCORD_0 }} - {{ item.XBPNAME_0 }}</b></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>\\r\\n            <ion-label color=\\\"primary\\\">Document</ion-label>\\r\\n          </th>\\r\\n          <td><b>{{ item.XDOCNUM_0 }}</b></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>\\r\\n            <ion-label color=\\\"primary\\\">Total Qty</ion-label>\\r\\n          </th>\\r\\n          <td><b>{{ (item.TQTY_0)?(item.TQTY_0): '0' }} {{ item.SAU_0 }}</b></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>\\r\\n            <ion-label color=\\\"primary\\\">Weight</ion-label>\\r\\n          </th>\\r\\n          <td><b>{{ (item.DSPTOTWEI_0)?(item.DSPTOTWEI_0): '0' }} {{ item.DSPWEU_0 }}</b></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>\\r\\n            <ion-label color=\\\"primary\\\">Volume</ion-label>\\r\\n          </th>\\r\\n          <td><b>{{ (item.DSPTOTVOL_0)?(item.DSPTOTVOL_0): '0' }} {{ item.DSPVOU_0 }}</b></td>\\r\\n        </tr>\\r\\n        <!-- <tr>\\r\\n          <th>ETA</th>\\r\\n          <td class=\\\"text-info\\\"><b>19:27</b></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>ETD</th>\\r\\n          <td class=\\\"text-info\\\"><b>19:48</b></td>\\r\\n        </tr> -->\\r\\n      </table>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n  <!-- <ion-card class=\\\"m-3\\\">\\r\\n    <ion-card-content class=\\\"p-0\\\">\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"5\\\" class=\\\"ion-text-center bg-light\\\" (click)=\\\"setDate('confirm_arrival')\\\">\\r\\n          <img src=\\\"assets/images/arrival.png\\\" alt=\\\"\\\" width=\\\"40px\\\">\\r\\n          <ion-text color=\\\"primary\\\">\\r\\n            <p class=\\\"pt-1\\\"><b>Confirm Arrival</b></p>\\r\\n          </ion-text>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"7\\\" class=\\\"d-flex-center\\\">\\r\\n          <ion-chip color=\\\"success\\\" *ngIf=\\\"podModel.confirm_arrival\\\">\\r\\n            <ion-label>{{ podModel.confirm_arrival | date: 'dd-MM-yyyy HH:mm' }}</ion-label>\\r\\n            <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n  <ion-card class=\\\"m-3\\\">\\r\\n    <ion-card-content class=\\\"p-0\\\">\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"5\\\" class=\\\"ion-text-center bg-light\\\" (click)=\\\"setDate('start_unload')\\\">\\r\\n          <img src=\\\"assets/images/start-unload.png\\\" alt=\\\"\\\" width=\\\"40px\\\">\\r\\n          <ion-text color=\\\"primary\\\">\\r\\n            <p class=\\\"pt-1\\\"><b>Start Unload</b></p>\\r\\n          </ion-text>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"7\\\" class=\\\"d-flex-center\\\">\\r\\n          <ion-chip color=\\\"success\\\" *ngIf=\\\"podModel.start_unload\\\">\\r\\n            <ion-label> {{ podModel.start_unload | date: 'dd-MM-yyyy HH:mm' }} </ion-label>\\r\\n            <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-card-content>\\r\\n  </ion-card> -->\\r\\n  <ion-card class=\\\"m-3\\\">\\r\\n    <ion-card-content class=\\\"p-0\\\">\\r\\n      <ion-row>\\r\\n        <ion-col (click)=\\\"delivery()\\\" size=\\\"5\\\" class=\\\"ion-text-center bg-light\\\">\\r\\n          <img src=\\\"assets/images/delivery.png\\\" alt=\\\"\\\" width=\\\"40px\\\">\\r\\n          <ion-text color=\\\"primary\\\">\\r\\n            <p class=\\\"pt-1\\\"><b>Delivery</b></p>\\r\\n          </ion-text>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"7\\\" class=\\\"d-flex-center\\\">\\r\\n          <ion-chip color=\\\"success\\\" *ngIf=\\\"podModel.delivery\\\">\\r\\n            <ion-label> {{ deliverDateTime | date: 'dd-MM-yyyy HH:mm'}} </ion-label>\\r\\n            <!-- {{ podModel.delivery }} <br>  -->\\r\\n            <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n  <!-- <ion-card class=\\\"m-3\\\">\\r\\n    <ion-card-content class=\\\"p-0\\\">\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"5\\\" class=\\\"ion-text-center bg-light\\\" (click)=\\\"setDate('end_unload')\\\">\\r\\n          <img src=\\\"assets/images/complete-unload.png\\\" alt=\\\"\\\" width=\\\"40px\\\">\\r\\n          <ion-text color=\\\"primary\\\">\\r\\n            <p class=\\\"pt-1\\\"><b>End Unload</b></p>\\r\\n          </ion-text>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"7\\\" class=\\\"d-flex-center\\\">\\r\\n          <ion-chip color=\\\"success\\\" *ngIf=\\\"podModel.end_unload\\\">\\r\\n            <ion-label> {{ podModel.end_unload | date: 'dd-MM-yyyy HH:mm' }} </ion-label>\\r\\n            <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n  <ion-card class=\\\"m-3\\\">\\r\\n    <ion-card-content class=\\\"p-0\\\">\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"5\\\" class=\\\"ion-text-center bg-light\\\" (click)=\\\"setDate('departure')\\\">\\r\\n          <img src=\\\"assets/images/departure.png\\\" alt=\\\"\\\" width=\\\"40px\\\">\\r\\n          <ion-text color=\\\"primary\\\">\\r\\n            <p class=\\\"pt-1\\\"><b>Departure</b></p>\\r\\n          </ion-text>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"7\\\" class=\\\"d-flex-center\\\">\\r\\n          <ion-chip color=\\\"success\\\" *ngIf=\\\"podModel.departure\\\">\\r\\n            <ion-label> {{ podModel.departure | date: 'dd-MM-yyyy HH:mm' }} </ion-label>\\r\\n            <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-card-content>\\r\\n  </ion-card> -->\\r\\n</ion-content>\\r\\n\";"],"sourceRoot":"webpack:///"}